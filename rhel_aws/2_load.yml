# file: 2_load.yml
---

- name: Wait for AWS AMIs to become initialized
  hosts: localhost
  gather_facts: no
  tags:
    - wait
  tasks:
    - wait_for:
        host: "{{ item }}"
        port: 22
        state: started
        timeout: 300
      with_items:
        - "{{ groups.rhel_nodes }}"

- name: Subscribe system
  become: yes
  remote_user: ec2-user
  hosts:
    - rhel_nodes
  tags:
    - rhsm
  gather_facts: yes
  roles:
    - role: subscription_manager 

- name: Configure epel on nodes
  become: yes
  remote_user: ec2-user
  hosts: rhel_nodes
  tags:
    - epel
  tasks:
    - name: RHEL 8 on AWS via Cloud Access has no available repositories
      fail:
        msg: "Please use RHSM via user ID/password or org ID/activation key."
      when: cloud_access and ansible_distribution == 'RedHat' and ansible_distribution_major_version == '8'
  roles:
    - role: epel

- name: Configure repositories on nodes
  become: yes
  remote_user: ec2-user
  hosts: le_node
  gather_facts: no
  tags:
    - letsencrypt
  roles:
    - role: LetsEncrypt

- name: Configure software on nodes
  become: yes
  remote_user: ec2-user
  hosts: rhel_nodes
  gather_facts: no
  tags:
    - software
  roles:
    - role: ansible.tower
    - role: vscode
    - role: graphical
    - role: system-user
  tasks:
    - name: install container management tools
      yum:
        name:
        - buildah
        - podman
        - skopeo
        state: present
    - name: install session recording tools
      yum:
        name:
        - tlog
        - cockpit-session-recording
        - systemd-journal-remote
        state: present

- name: Configure web console (RHEL 7)
  become: yes
  remote_user: ec2-user
  hosts: rhel_nodes
  gather_facts: no
  tags:
    - wetty
  roles:
    - role: wetty
      when: rhel_ver == 'rhel7'

- name: Configure web console (RHEL 8)
  become: yes
  remote_user: ec2-user
  hosts: rhel_nodes
  gather_facts: no
  tags:
    - webconsole
  roles:
    - role: cockpit
      when: rhel_ver == 'rhel8'

- name: Upgrade packages
  become: yes
  remote_user: ec2-user
  hosts:
    - rhel_nodes
  tags:
    - upgrade
  roles:
    - role: upgrade

- name: Re-enable SCL repo when upgrade disables it
  become: yes
  remote_user: ec2-user
  hosts:
    - rhel_nodes
  gather_facts: yes
  tags:
    - upgrade
  roles:
    - role: subscription_manager 

- name: Custom installations
  become: yes
  remote_user: ec2-user
  hosts:
    - rhel_nodes
  gather_facts: yes
  tags:
    - custom
  tasks:
    - name: search for httpd versions
      yum:
        list: httpd
      register: result

    - set_fact:
        httpd_packages: "{{ httpd_packages|default([]) }} + [ '{{ item.name + '-' + item.version + '-' + item.release + '.' + item.arch }}']"
      with_items:
      - "{{ result.results }}"

    - name: install oldest available version of httpd
      yum:
        name: "{{ httpd_packages | sort_versions | first }}"
        state: present

- name: Pre-load system role playbook
  become: no
  remote_user: ec2-user
  hosts:
    - rhel_nodes
  gather_facts: yes
  tags:
    - custom
  tasks:
    - name: install system role network playbook
      copy:
        dest: "~/example-network-playbook.yml"
        src: "example-network-playbook.yml"
        mode: 0644

...
